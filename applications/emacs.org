 #+TITLE: Emacs
* Emacs Mac Port
*Install [[https://github.com/railwaycat/homebrew-emacsmacport][emacs-mac]]*\\
This provides a native GUI support for Mac OS X 10.6 - macOS 10.15.
#+begin_src sh
brew tap railwaycat/emacsmacport
brew install emacs-mac --with-natural-title-bar
#+end_src
* Doom Emacs
** Installation
*Install doom emacs*
#+begin_src sh
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.config/emacs
~/.config/emacs/bin/doom install
#+end_src

** Dependencies
*Install doom emacs dependencies: ripgrep, coreutils, fd*
#+begin_src sh
brew install ripgrep coreutils fd
#+end_src

*Install markdown preview depenencies: pandoc*
#+begin_src sh
brew install pandoc
#+end_src

*Install vterm dependencies: cmake, libvterm*
#+begin_src sh
brew install cmake libvterm
#+end_src

*Install shell mode dependencies: shfmt, shellcheck*
#+begin_src sh
brew install shfmt shellcheck
#+end_src

** Setup
*Setup doom emacs for macos*
#+begin_src sh
curl -Sso ~/.doom.d/README.org https://raw.githubusercontent.com/willbchang/macos-emacs-doom.d/master/README.org
echo "(org-babel-load-file \"~/.doom.d/README.org\")" >>~/.doom.d/config.el
#+end_src

*Copy init.el and packages.el to doom folder.*
#+begin_src sh
cp emacs/init.el ~/.config/doom/init.el
cp emacs/packages.el ~/.config/doom/packages.el
#+end_src

*Rebuild doom emacs packages*
#+begin_src sh
~/.emacs.d/bin/doom sync && ~/.emacs.d/bin/doom build
#+end_src

* Init.el
** completion
- *company*: the ultimate code completion backend
- *ivy*: a search engine for love and life

** ui
- *doom*: what makes DOOM look the way it does
- *hl-todo*: highlight TODO/FIXME/NOTE/DEPRECATED/HACK/REVIEW
- *modeline*: snazzy, Atom-inspired modeline, plus API
- *ophints*: highlight the region an operation acts on
- *(popup +defaults)*: tame sudden yet inevitable temporary windows
- *unicode*: extended unicode support for various languages
- *vc-gutter*: vcs diff in the fringe
- *vi-tilde-fringe*: fringe tildes to mark beyond EOB
- *workspaces*: tab emulation, persistence & separate workspaces

** editor
- *(evil +everywhere)*: come to the dark side, we have cookies
- *file-templates*: auto-snippets for empty files
- *fold*: (nigh) universal code folding
- *multiple-cursors*: editing in many places at once
- *snippets*: my elves. They type so I don't have to
- *word-wrap*: soft wrapping with language-aware indent

** emacs
- *dired*: making dired pretty [functional]
- *electric*: smarter, keyword-based electric-indent
- *undo*: persistent, smarter undo for your inevitable mistakes
- *vc*: version-control and Emacs, sitting in a tree

** term
- *vterm*: the best terminal emulation in Emacs

** checkers
- *syntax*: tasing you for every semicolon you forget

** tools
- *(eval +overlay)*: run code, run (also, repls)
- *lookup*: navigate your code and its documentation
- *magit*: a git porcelain for Emacs

** os
- *(:if IS-MAC macos)*: improve compatibility with macOS
- *tty*: improve the terminal Emacs experience

** lang
- *emacs-lisp*: drown in parentheses
- *markdown*: writing docs for people to ignore
- *org*: organize your plain life in plain text

** config
- (default +bindings +smartparens))

* Config.el
** UI
*** Title Bar
Show full path in title bar.
#+begin_src emacs-lisp
(setq frame-title-format
    '(:eval
       (if buffer-file-name
           (abbreviate-file-name buffer-file-name)
           "%b")))
#+end_src

*** Side Bar
TODO
*** Tab Bar
TODO
*** Status Bar
Hide the buffer name in doom-modeline
#+begin_src emacs-lisp
(after! doom-modeline
  (doom-modeline-def-segment buffer-info
    "buffer info segment."
    "")
  (doom-modeline-def-segment buffer-info-simple
    "simple buffer info segment."
    "")
)
#+end_src

Hide buffer encoding info.
#+begin_src emacs-lisp
(after! doom-modeline (setq doom-modeline-buffer-encoding nil))
#+end_src

Show indent info.
#+begin_src emacs-lisp
(after! doom-modeline (setq doom-modeline-indent-info t))
#+end_src

Hide size indicator.
#+begin_src emacs-lisp
(after! doom-modeline (remove-hook 'doom-modeline-mode-hook #'size-indication-mode))
#+end_src

Hide evil-mode state color in modeline.
#+begin_src emacs-lisp
(after! doom-modeline (setq doom-modeline-modal-icon nil))
#+end_src

Hide evil-mode state color in modeline.
#+begin_src emacs-lisp
(setq evil-normal-state-tag ""
      evil-insert-state-tag ""
      evil-visual-state-tag "")
#+end_src

Count column number from 1 instead of 0.
#+begin_src emacs-lisp
(setq column-number-indicator-zero-based nil)
#+end_src

*** Window
Set window size to 80 x 36.
#+begin_src emacs-lisp
(add-to-list 'default-frame-alist '(width . 80))
(add-to-list 'default-frame-alist '(height . 36))
#+end_src

Set trasnparent window.
#+begin_src emacs-lisp
(set-frame-parameter (selected-frame) 'alpha '(98 . 95))
(add-to-list 'default-frame-alist '(alpha . (98 . 95)))
#+end_src

*** Color Theme
Use doom vibrant as default theme.
#+begin_src emacs-lisp
(setq doom-theme 'doom-vibrant)
#+end_src

Set cursor color to pink and show different cusor style based on current mode.
#+begin_src emacs-lisp
(setq evil-normal-state-cursor '(box "#e2416c")
      evil-insert-state-cursor '(bar "#e2416c")
      evil-visual-state-cursor '(hollow "#e2416c")
      evil-operator-state-cursor '(evil-half-cursor "#e2416c")
      evil-replace-state-cursor '(hbar "#e2416c"))
#+end_src

*** Font
Set font family and font size.
#+begin_src emacs-lisp
(setq doom-font (font-spec :family "Inconsolata" :size 20))
#+end_src

*** Line Number
| Display Style                | Value     | Status   |
|------------------------------+-----------+----------|
| Absolute line numbers        | t         | Default  |
| Relative line numbers        | 'relative | Prefered |
| Relative visual line numbers | 'visual   |          |
| No line numbers              | nil       |          |
#+begin_src emacs-lisp
(setq display-line-numbers-type 'relative)
#+end_src

** Keybindings
Disable conflict or unused keybindings.
#+begin_src emacs-lisp
(map!
 "M-0" nil
 :n "s-0" nil
 :n "C--" nil
 :n "C-=" nil
 :n "C-+" nil
)
#+end_src

*** Text Editing
| Keybindings                | Features                          | Convention | Built in Status |
|----------------------------+-----------------------------------+------------+-----------------|
| ~Command + C~              | Copy                              | macOS      | Doom Emacs      |
| ~Command + V~              | Paste                             | macOS      | Doom Emacs      |
| ~Command + X~              | Cut                               | macOS      | Customize       |
| ~Command + Z~              | Undo                              | macOS      | Doom Emacs      |
| ~Command + Shift + Z~      | Redo                              | macOS      | Doom Emacs      |
| ~Command + A~              | Select All Text                   | macOS      | Doom Emacs      |
| ~Command + F~              | Search Text                       | macOS      | Doom Emacs      |
| ~Command + ↑~              | Move to the top of the file.      | macOS      | Customize       |
| ~Command + ↓~              | Move to the bottom of the file    | macOS      | Customize       |
| ~Command + ←~              | Move to the beginning of the line | macOS      | Doom Emacs      |
| ~Command + →~              | Move to the end of the line       | macOS      | Doom Emacs      |
| ~Command + L~              | Go to Line                        | macOS      | Doom Emacs      |
| ~Option + Delete~          | Delete a word                     | macOS      | Doom Emacs      |
| ~Command + Delete~         | Delete to Line Start              | macOS      | Doom Emacs      |
| ~Command + Shift + Delete~ | Delete Entire Line                | Personal   | Customize       |
| ~Command + /~              | Comment or Uncomment line(s)      | macOS      | Doom Emacs      |


#+begin_src emacs-lisp
(map!
 :g "s-x" 'kill-region
    "s-S-<backspace>" 'kill-whole-line
    "s-<up>" 'beginning-of-buffer
    "s-<down>" 'end-of-buffer
)
#+end_src

*** Buffer
| Keybindings   | Features              | Convention | Built in Status |
|---------------+-----------------------+------------+-----------------|
| ~Command + W~ | Close Current Buffer  | macOS      | Customize       |
| ~Command + [~ | Go to previous Buffer | macOS      | Customize       |
| ~Command + ]~ | Go to next Buffer     | macOS      | Customize       |
| ~Command + =~ | Zoom in Buffer        | macOS      | Customize       |
| ~Command + -~ | Zoom out Buffer       | macOS      | Customize       |
| ~Command + 0~ | Reset Zoom Buffer     | macOS      | Customize       |
| ~Command + T~ | Create New Buffer     | macOS      | Customize       |
| ~Command + S~ | Save Buffer           | macOS      | Customize       |
| ~Command + R~ | Revert Buffer         | macOS      | Customize       |
| ~Command + '~ | Move to next Buffer   | Emacs      | Customize       |
| ~Command + ,~ | Open Preferences      | macOS      | Customize       |

#+begin_src emacs-lisp
(map!
 :g "s-w" 'kill-current-buffer
 :g "s-[" 'previous-buffer
 :g "s-]" 'next-buffer
 :g "s-=" 'text-scale-increase
 :g "s--" 'text-scale-decrease
 :g "s-0" 'text-scale-reset
 :g "s-t" '+default/new-buffer
 :g "s-r" 'revert-buffer
 :g "s-'" 'next-window-any-frame
 :g "s-," 'customize
)

(defun text-scale-reset ()
  (interactive)
  (text-scale-set 0))
#+end_src

*** Window
| Keybindings           | Features             | Convention | Built in Status |
|-----------------------+----------------------+------------+-----------------|
| ~Command + Shift + W~ | Close Current Window | macOS      | Customize       |
| ~Command + Shift + =~ | Zoom in Window       | Personal   | Customize       |
| ~Command + Shit + -~  | Zoom out Window      | Personal   | Customize       |
| ~Command + Shit + 0~  | Reset Zoom Window    | Personal   | Customize       |
| ~Command + N~         | Create New Window    | macOS      | Customize       |
| ~Command + `~         | Move to next Window  | macOS      | Customize       |
| ~Command + Q~         | Quit Emacs           | macOS      | Customize       |

#+begin_src emacs-lisp
(map!
 :g "s-W" 'delete-frame
 :g "s-+" 'doom/increase-font-size
 :g "s-_" 'doom/decrease-font-size
 :g "s-)" 'doom/reset-font-size
 :g "s-n" 'make-frame
 :g "s-`" 'other-frame
 :g "s-q" 'save-buffers-kill-emacs
)
#+end_src

** Behaviors
Iterate through CamelCase words in programming mode.
#+begin_src emacs-lisp
(add-hook 'prog-mode-hook 'subword-mode)
#+end_src

Quit Emacs without confirm.
#+begin_src emacs-lisp
(setq confirm-kill-emacs nil)
#+end_src

Highlight links and emails globally.
#+begin_src emacs-lisp
(define-globalized-minor-mode global-goto-address-mode goto-address-mode
  (lambda () (goto-address-mode 1)))

(global-goto-address-mode 1)
#+end_src

** Terminal
Do not ask to confirm when quitting vterm.
#+begin_src emacs-lisp
(setq kill-buffer-query-functions nil)
#+end_src

** Org
Set default major mode of new buffer to org-mode.
#+begin_src emacs-lisp
(setq-default major-mode 'org-mode)
#+end_src

Set default major mode of scratch buffer to org-mode.
#+begin_src emacs-lisp
(setq-default initial-major-mode 'org-mode)
#+end_src

Enable org superstar mode.
#+begin_src emacs-lisp
(add-hook 'org-mode-hook (lambda () (org-superstar-mode 1)))
#+end_src

Change org headline styles.
#+begin_src emacs-lisp
(setq org-superstar-headline-bullets-list '("◉" "○" "◈" "◇" "▣" "□"))
#+end_src

Change org unordered list styles.
#+begin_src emacs-lisp
(setq org-superstar-prettify-item-bullets t)
(setq org-superstar-item-bullet-alist '((?* . ?•)
                                        (?+ . ?•)
                                        (?- . ?•)))
#+end_src
